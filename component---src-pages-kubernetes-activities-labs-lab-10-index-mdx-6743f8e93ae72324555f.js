(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{"013z":function(e,t,a){"use strict";a("KKXr"),a("pIFo");var n=a("pOBw"),l=a("q1tI"),r=a.n(l),b=a("NmYn"),i=a.n(b),o=a("OKom"),c=a("k4MR"),p=a("TSYQ"),s=a.n(p),m=a("QH2O"),u=a("qKvR"),O=function(e){var t,a=e.title,n=e.tabs,l=void 0===n?[]:n;return Object(u.b)("div",{className:s()(m.pageHeader,(t={},t[m.withTabs]=l.length,t))},Object(u.b)("div",{className:"bx--grid"},Object(u.b)("div",{className:"bx--row"},Object(u.b)("div",{className:"bx--col-lg-12"},Object(u.b)("h1",{id:"page-title",className:m.text},a)))))},d=a("pEPl"),j=a("BAC9"),N=function(e){var t=e.relativePagePath,a=e.repository,n=d.data.site.siteMetadata.repository,l=a||n,r=l.baseUrl,b=l.subDirectory,i=r+"/edit/"+l.branch+b+"/src/pages"+t;return r?Object(u.b)("div",{className:"bx--row "+j.row},Object(u.b)("div",{className:"bx--col"},Object(u.b)("a",{className:j.link,href:i},"Edit this page on GitHub"))):null},h=a("FCXl"),v=(a("Oyvg"),a("Wbzz")),g=a("I8xM");var f=function(e){var t,a;function n(){return e.apply(this,arguments)||this}return a=e,(t=n).prototype=Object.create(a.prototype),t.prototype.constructor=t,t.__proto__=a,n.prototype.render=function(){var e=this.props,t=e.tabs,a=e.slug,n=a.split("/").filter(Boolean).slice(-1)[0],l=t.map((function(e){var t,l=i()(e,{lower:!0}),r=l===n,b=new RegExp(n+"(?!-)"),o=a.replace(b,l);return Object(u.b)("li",{key:e,className:s()((t={},t[g.selectedItem]=r,t),g.listItem)},Object(u.b)(v.Link,{className:g.link,to:""+o},e))}));return Object(u.b)("div",{className:g.tabsContainer},Object(u.b)("div",{className:"bx--grid"},Object(u.b)("div",{className:"bx--row"},Object(u.b)("div",{className:"bx--col-lg-12 bx--col-no-gutter"},Object(u.b)("nav",null,Object(u.b)("ul",{className:g.list},l))))))},n}(r.a.Component),C=a("MjG9");t.a=function(e){var t=e.pageContext,a=e.children,l=e.location,r=e.Title,b=t.frontmatter,p=void 0===b?{}:b,s=t.relativePagePath,m=t.titleType,d=p.tabs,j=p.title,v=p.theme,g=p.description,P=p.keywords,w=n.data.site.pathPrefix,y=w?l.pathname.replace(w,""):l.pathname,x=d?y.split("/").slice(-1)[0]||i()(d[0],{lower:!0}):"";return Object(u.b)(c.a,{tabs:d,homepage:!1,theme:v,pageTitle:j,pageDescription:g,pageKeywords:P,titleType:m},Object(u.b)(O,{title:r?Object(u.b)(r,null):j,label:"label",tabs:d}),d&&Object(u.b)(f,{slug:y,tabs:d,currentTab:x}),Object(u.b)(C.a,{padded:!0},a,Object(u.b)(N,{relativePagePath:s})),Object(u.b)(h.a,{pageContext:t,location:l,slug:y,tabs:d,currentTab:x}),Object(u.b)(o.a,null))}},"X/gb":function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return b})),a.d(t,"default",(function(){return c}));a("91GP"),a("rGqo"),a("yt8O"),a("Btvt"),a("RW0V"),a("q1tI");var n=a("7ljp"),l=a("013z");a("qKvR");function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}var b={},i={_frontmatter:b},o=l.a;function c(e){var t=e.components,a=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,["components"]);return Object(n.b)(o,r({},i,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h2",null,"Problem"),Object(n.b)("p",null,"The death star plans canâ€™t be lost no matter what happens so we need to make sure we protect them at all costs."),Object(n.b)("p",null,"In order to do that you will need to do the following:"),Object(n.b)("p",null,"Create a ",Object(n.b)("inlineCode",{parentName:"p"},"PersistentVolume"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"The PersistentVolume should be named ",Object(n.b)("inlineCode",{parentName:"p"},"postgresql-pv"),".")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"The volume needs a capacity of ",Object(n.b)("inlineCode",{parentName:"p"},"1Gi"),".")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Use a storageClassName of ",Object(n.b)("inlineCode",{parentName:"p"},"localdisk"),".")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Use the accessMode ",Object(n.b)("inlineCode",{parentName:"p"},"ReadWriteOnce"),".")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Store the data locally on the node using a ",Object(n.b)("inlineCode",{parentName:"p"},"hostPath")," volume at the location ",Object(n.b)("inlineCode",{parentName:"p"},"/mnt/data"),"."))),Object(n.b)("p",null,"Create a ",Object(n.b)("inlineCode",{parentName:"p"},"PersistentVolumeClaim"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"The PersistentVolumeClaim should be named ",Object(n.b)("inlineCode",{parentName:"p"},"postgresql-pv-claim"),".")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Set a resource request on the claim for ",Object(n.b)("inlineCode",{parentName:"p"},"500Mi")," of storage.")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Use the same storageClassName and accessModes as the PersistentVolume so that this claim can bind to the PersistentVolume."))),Object(n.b)("p",null,"Create a ",Object(n.b)("inlineCode",{parentName:"p"},"Postgresql")," Pod configured to use the ",Object(n.b)("inlineCode",{parentName:"p"},"PersistentVolumeClaim"),":"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"The Pod should be named ",Object(n.b)("inlineCode",{parentName:"p"},"postgresql-pod"),".")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Use the image ",Object(n.b)("inlineCode",{parentName:"p"},"bitnami/postgresql"),".")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Expose the containerPort ",Object(n.b)("inlineCode",{parentName:"p"},"5432"),".")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Set an ",Object(n.b)("inlineCode",{parentName:"p"},"environment variable")," called ",Object(n.b)("inlineCode",{parentName:"p"},"MYSQL_ROOT_PASSWORD")," with the value ",Object(n.b)("inlineCode",{parentName:"p"},"password"),".")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Add the ",Object(n.b)("inlineCode",{parentName:"p"},"PersistentVolumeClaim")," as a volume and mount it to the container at the path ",Object(n.b)("inlineCode",{parentName:"p"},"/bitnami/postgresql/"),"."))))}c.isMDXComponent=!0},pEPl:function(e){e.exports=JSON.parse('{"data":{"site":{"id":"Site","siteMetadata":{"repository":{"baseUrl":"https://github.com/ibm-cloud-architecture/learning-cloudnative-101","subDirectory":"/","branch":"master"}}}}}')},pOBw:function(e){e.exports=JSON.parse('{"data":{"site":{"id":"Site","pathPrefix":""}}}')}}]);
//# sourceMappingURL=component---src-pages-kubernetes-activities-labs-lab-10-index-mdx-6743f8e93ae72324555f.js.map