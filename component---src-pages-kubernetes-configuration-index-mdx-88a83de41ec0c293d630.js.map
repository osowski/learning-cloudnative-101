{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./src/pages/kubernetes/configuration/index.mdx"],"names":["PageHeader","title","tabs","className","cx","pageHeader","withTabs","length","id","text","EditLink","relativePagePath","repositoryProp","repository","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","theme","description","keywords","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","BackToTopBtn","_frontmatter","makeShortcode","name","console","warn","AnchorLinks","AnchorLink","Tabs","Tab","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-kubernetes-configuration-index-mdx-88a83de41ec0c293d630.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const currentTabRegex = new RegExp(`${currentTab}(?!-)`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport BackToTopBtn from '../components/BackToTopBtn';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}\n    >\n      <PageHeader title={Title ? <Title /> : title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <BackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/ibm-cloud-architecture/learning-cloudnative-101/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst Tabs = makeShortcode(\"Tabs\");\nconst Tab = makeShortcode(\"Tab\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Container Configuration</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Resource Requirements</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">ConfigMaps</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Secrets</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">SecurityContexts</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Service Accounts</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Activities</AnchorLink>\n    </AnchorLinks>\n    <h1>{`Container Configuration`}</h1>\n    <p><strong parentName=\"p\">{`Command and Argument`}</strong></p>\n    <p>{`When you create a Pod, you can define a command and arguments for the containers that run in the Pod.`}</p>\n    <p>{`The command and arguments that you define in the configuration file override the default command and arguments provided by the container image`}</p>\n    <p>{`Dockerfile vs Kubernetes\nDockerfile Entrypoint -> k8s command\nDockerfile CMD -> k8s args`}</p>\n    <p><strong parentName=\"p\">{`Ports`}</strong></p>\n    <p>{`When you create a Pod, you can specify the port number the container exposes, as best practice is good to put a `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{`, this way a service can specify targetport by name reference.`}</p>\n    <p><strong parentName=\"p\">{`Environment Variable`}</strong></p>\n    <p>{`When you create a Pod, you can set environment variables for the containers that run in the Pod. To set environment variables, include the env or envFrom field in the container configuration`}</p>\n    <p>{`A Pod can use environment variables to expose information about itself to Containers running in the Pod. Environment variables can expose Pod fields and Container fields`}</p>\n    <h2>{`Resources`}</h2>\n    <p><strong parentName=\"p\">{`IKS & OpenShift`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/\"\n        }}>{`Container Commands`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/\"\n        }}>{`Environment Variables`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://kubernetes.io/docs/concepts/services-networking/connect-applications-service/#exposing-pods-to-the-cluster\"\n        }}>{`Pod Exposing`}</a></li>\n    </ul>\n    <h2>{`References`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-cmd-pod\nspec:\n  containers:\n  - name: myapp-container\n    image: busybox\n    command: ['echo']\n  restartPolicy: Never\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-arg-pod\nspec:\n  containers:\n  - name: myapp-container\n    image: busybox\n    command: ['echo']\n    args: ['Hello World']\n  restartPolicy: Never\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-port-pod\nspec:\n  containers:\n  - name: myapp-container\n    image: bitnami/nginx\n    ports:\n    - containerPort: 8080\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-env-pod\nspec:\n  restartPolicy: Never\n  containers:\n  - name: c\n    image: busybox\n    env:\n    - name: DEMO_GREETING\n      value: \"Hello from the environment\"\n    command: [\"echo\"]\n    args: [\"$(DEMO_GREETING)\"]\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-inter-pod\n  labels:\n    app: jedi\nspec:\n  restartPolicy: Never\n  containers:\n    - name: myapp\n      image: busybox\n      ports:\n        - containerPort: 8080\n          name: http\n      env:\n        - name: MY_NODE_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: spec.nodeName\n        - name: MY_POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: MY_POD_IP\n          valueFrom:\n            fieldRef:\n              fieldPath: status.podIP\n      command: [\"echo\"]\n      args: [\"$(MY_NODE_NAME) $(MY_POD_NAME) $(MY_POD_IP)\"]\n`}</code></pre>\n    <h1>{`Resource Requirements`}</h1>\n    <p>{`When you specify a Pod, you can optionally specify how much CPU and memory (RAM) each Container needs. When Containers have resource requests specified, the scheduler can make better decisions about which nodes to place Pods on.`}</p>\n    <p>{`CPU and memory are each a resource type. A resource type has a base unit. CPU is specified in units of cores, and memory is specified in units of bytes.`}</p>\n    <h2>{`Resources`}</h2>\n    <p><strong parentName=\"p\">{`IKS & OpenShift`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container\"\n        }}>{`Compute Resources`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/\"\n        }}>{`Memory Management`}</a></li>\n    </ul>\n    <h2>{`References`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  containers:\n  - name: my-app\n    image: bitnami/nginx\n    ports:\n      - containerPort: 8080\n    resources:\n      requests:\n        memory: \"64Mi\"\n        cpu: \"250m\"\n      limits:\n        memory: \"128Mi\"\n        cpu: \"500m\"\n`}</code></pre>\n    <p>{`Namespaced defaults mem`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: LimitRange\nmetadata:\n  name: mem-limit-range\nspec:\n  limits:\n  - default:\n      memory: 512Mi\n    defaultRequest:\n      memory: 256Mi\n    type: Container\n`}</code></pre>\n    <p>{`Namespaced defaults mem`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: LimitRange\nmetadata:\n  name: cpu-limit-range\nspec:\n  limits:\n  - default:\n      cpu: 1\n    defaultRequest:\n      cpu: 0.5\n    type: Container\n`}</code></pre>\n    <h1>{`ConfigMaps`}</h1>\n    <p>{`ConfigMaps allow you to decouple configuration artifacts from image content to keep containerized applications portable.`}</p>\n    <p>{`You can data from a ConfigMap in 3 different ways.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`As a single environment variable specific to a single key`}</li>\n      <li parentName=\"ul\">{`As a set of environment variables from all keys`}</li>\n      <li parentName=\"ul\">{`As a set of files, each key represented by a file on mounted volume`}</li>\n    </ul>\n    <h2>{`Resources`}</h2>\n    <p><strong parentName=\"p\">{`OpenShift`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.openshift.com/container-platform/4.3/nodes/containers/nodes-containers-projected-volumes.html\"\n        }}>{`Mapping Volumes`}</a></li>\n    </ul>\n    <p><strong parentName=\"p\">{`IKS`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/\"\n        }}>{`ConfigMaps`}</a></li>\n    </ul>\n    <h2>{`References`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: ConfigMap\nmetadata:\n   name: my-cm\ndata:\n   color: blue\n   location: naboo\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  containers:\n    - name: myapp\n      image: busybox\n      command: [\"echo\"]\n      args: [\"color is $(MY_VAR)\"]\n      env:\n        - name: MY_VAR\n          valueFrom:\n            configMapKeyRef:\n              name: my-cm\n              key: color\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  containers:\n    - name: myapp\n      image: busybox\n      command:\n        [\n          \"sh\",\n          \"-c\",\n          \"ls -l /etc/config; echo located at $(cat /etc/config/location)\",\n        ]\n      volumeMounts:\n        - name: config-volume\n          mountPath: /etc/config\n  volumes:\n    - name: config-volume\n      configMap:\n        name: my-cm\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  containers:\n    - name: myapp\n      image: busybox\n      command: [\"/bin/sh\", \"-c\", \"env | sort\"]\n      envFrom:\n        - configMapRef:\n            name: my-cm\n  restartPolicy: Never\n`}</code></pre>\n    <h1>{`Secrets`}</h1>\n    <p>{`Kubernetes secret objects let you store and manage sensitive information, such as passwords, OAuth tokens, and ssh keys. Putting this information in a secret is safer and more flexible than putting it verbatim in a Pod definition or in a container image.`}</p>\n    <p>{`A Secret is an object that contains a small amount of sensitive data such as a password, a token, or a key. Such information might otherwise be put in a Pod specification or in an image; putting it in a Secret object allows for more control over how it is used, and reduces the risk of accidental exposure.`}</p>\n    <h2>{`Resources`}</h2>\n    <p><strong parentName=\"p\">{`OpenShift`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.openshift.com/container-platform/4.3/nodes/containers/nodes-containers-projected-volumes.html\"\n        }}>{`Secrets`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.openshift.com/container-platform/4.3/cli_reference/openshift_cli/developer-cli-commands.html#secrets\"\n        }}>{`Secret Commands`}</a></li>\n    </ul>\n    <p><strong parentName=\"p\">{`IKS`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://kubernetes.io/docs/concepts/configuration/secret/\"\n        }}>{`Secrets`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/\"\n        }}>{`Secret Distribution`}</a></li>\n    </ul>\n    <h2>{`References`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: Secret\nmetadata:\n  name: mysecret\ntype: Opaque\ndata:\n  username: YWRtaW4=\nstringData:\n  admin: administrator\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: Secret\nmetadata:\n  name: mysecret-config\ntype: Opaque\nstringData:\n  config.yaml: |-\n    apiUrl: \"https://my.api.com/api/v1\"\n    username: token\n    password: thesecrettoken\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  containers:\n  - name: my-app\n    image: bitnami/nginx\n    ports:\n      - containerPort: 8080\n    env:\n      - name: SECRET_USERNAME\n        valueFrom:\n          secretKeyRef:\n            name: mysecret\n            key: username\n    envFrom:\n      - secretRef:\n          name: mysecret\n    volumeMounts:\n      - name: config\n        mountPath: \"/etc/secrets\"\n  volumes:\n    - name: config\n      secret:\n        secretName: mysecret-config\n`}</code></pre>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"OpenShift\" mdxType=\"Tab\">\n        <p><strong parentName=\"p\">{` Create files needed for rest of example.`}</strong></p>\n        <pre><code parentName=\"pre\" {...{}}>{`echo -n 'admin' > ./username.txt\necho -n '1f2d1e2e67df' > ./password.txt\n`}</code></pre>\n        <p><strong parentName=\"p\">{` Creating Secret from files. `}</strong></p>\n        <pre><code parentName=\"pre\" {...{}}>{`oc create secret generic db-user-pass --from-file=./username.txt --from-file=./password.txt\n`}</code></pre>\n        <p><strong parentName=\"p\">{` Getting Secret `}</strong></p>\n        <pre><code parentName=\"pre\" {...{}}>{`oc get secrets\n`}</code></pre>\n        <p><strong parentName=\"p\">{` Gets the Secret’s Description. `}</strong></p>\n        <pre><code parentName=\"pre\" {...{}}>{`oc describe secrets/db-user-pass\n`}</code></pre>\n      </Tab>\n      <Tab label=\"IKS\" mdxType=\"Tab\">\n        <p><strong parentName=\"p\">{` Create files needed for rest of example. `}</strong></p>\n        <pre><code parentName=\"pre\" {...{}}>{`echo -n 'admin' > ./username.txt\necho -n '1f2d1e2e67df' > ./password.txt\n`}</code></pre>\n        <p><strong parentName=\"p\">{` Creates the Secret from the files `}</strong></p>\n        <pre><code parentName=\"pre\" {...{}}>{`kubectl create secret generic db-user-pass --from-file=./username.txt --from-file=./password.txt\n`}</code></pre>\n        <p><strong parentName=\"p\">{` Gets the Secret `}</strong></p>\n        <pre><code parentName=\"pre\" {...{}}>{`kubectl get secrets\n`}</code></pre>\n        <p><strong parentName=\"p\">{` Gets the Secret’s Description. `}</strong></p>\n        <pre><code parentName=\"pre\" {...{}}>{`kubectl describe secrets/db-user-pass\n`}</code></pre>\n      </Tab>\n    </Tabs>\n    <h1>{`SecurityContexts`}</h1>\n    <p>{`A security context defines privilege and access control settings for a Pod or Container.`}</p>\n    <p>{`To specify security settings for a Pod, include the securityContext field in the Pod specification. The securityContext field is a PodSecurityContext object. The security settings that you specify for a Pod apply to all Containers in the Pod.`}</p>\n    <h2>{`Resources`}</h2>\n    <p><strong parentName=\"p\">{`OpenShift`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.openshift.com/container-platform/4.3/authentication/managing-security-context-constraints.html\"\n        }}>{`Managing Security Contexts`}</a></li>\n    </ul>\n    <p><strong parentName=\"p\">{`IKS`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\"\n        }}>{`Security Contexts`}</a></li>\n    </ul>\n    <h2>{`References`}</h2>\n    <p>{`Setup minikube VM with users`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`minikube ssh\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`su -\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`echo \"container-user-0:x:2000:2000:-:/home/container-user-0:/bin/bash\" >> /etc/passwd\necho \"container-user-1:x:2001:2001:-:/home/container-user-1:/bin/bash\" >> /etc/passwd\necho \"container-group-0:x:3000:\" >>/etc/group\necho \"container-group-1:x:3001:\" >>/etc/group\nmkdir -p /etc/message/\necho \"Hello, World!\" | sudo tee -a /etc/message/message.txt\nchown 2000:3000 /etc/message/message.txt\nchmod 640 /etc/message/message.txt\n`}</code></pre>\n    <p>{`Using the this `}<inlineCode parentName=\"p\">{`securityContext`}</inlineCode>{` the container will be able to read the file `}<inlineCode parentName=\"p\">{`/message/message.txt`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-securitycontext-pod\nspec:\n  securityContext:\n    runAsUser: 2000\n    runAsGroup: 3000\n    fsGroup: 3000\n  containers:\n    - name: myapp-container\n      image: busybox\n      command: [\"sh\", \"-c\", \"cat /message/message.txt && sleep 3600\"]\n      volumeMounts:\n        - name: message-volume\n          mountPath: /message\n  volumes:\n    - name: message-volume\n      hostPath:\n        path: /etc/message\n`}</code></pre>\n    <p>{`Using the this `}<inlineCode parentName=\"p\">{`securityContext`}</inlineCode>{` the container should NOT be able to read the file `}<inlineCode parentName=\"p\">{`/message/message.txt`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-securitycontext-pod\nspec:\n  securityContext:\n    runAsUser: 2001\n    runAsGroup: 3001\n    fsGroup: 3001\n  containers:\n    - name: myapp-container\n      image: busybox\n      command: [\"sh\", \"-c\", \"cat /message/message.txt && sleep 3600\"]\n      volumeMounts:\n        - name: message-volume\n          mountPath: /message\n  volumes:\n    - name: message-volume\n      hostPath:\n        path: /etc/message\n`}</code></pre>\n    <p><strong parentName=\"p\">{` Run to see the errors `}</strong></p>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"OpenShift\" mdxType=\"Tab\">\n        <p><strong parentName=\"p\">{` Get Pod Logs `}</strong></p>\n        <pre><code parentName=\"pre\" {...{}}>{`oc logs my-securitycontext-pod\n`}</code></pre>\n        <p><strong parentName=\"p\">{` Should return `}</strong></p>\n        <pre><code parentName=\"pre\" {...{}}>{`cat: can't open '/message/message.txt': Permission denied\n`}</code></pre>\n      </Tab>\n      <Tab label=\"IKS\" mdxType=\"Tab\">\n        <p><strong parentName=\"p\">{` Get Pod Logs `}</strong></p>\n        <pre><code parentName=\"pre\" {...{}}>{`kubectl logs my-securitycontext-pod\n`}</code></pre>\n        <p><strong parentName=\"p\">{` Should return `}</strong></p>\n        <pre><code parentName=\"pre\" {...{}}>{`cat: can't open '/message/message.txt': Permission denied\n`}</code></pre>\n      </Tab>\n    </Tabs>\n    <h1>{`Service Accounts`}</h1>\n    <p>{`A service account provides an identity for processes that run in a Pod.`}</p>\n    <p>{`When you (a human) access the cluster (for example, using kubectl), you are authenticated by the apiserver as a particular User Account (currently this is usually admin, unless your cluster administrator has customized your cluster). Processes in containers inside pods can also contact the apiserver. When they do, they are authenticated as a particular Service Account (for example, default).`}</p>\n    <p>{`User accounts are for humans. Service accounts are for processes, which run in pods.`}</p>\n    <p>{`User accounts are intended to be global. Names must be unique across all namespaces of a cluster, future user resource will not be namespaced. Service accounts are namespaced.`}</p>\n    <h2>{`Resources`}</h2>\n    <p><strong parentName=\"p\">{`OpenShift`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.openshift.com/container-platform/4.3/authentication/understanding-and-creating-service-accounts.html\"\n        }}>{`Service Accounts`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.openshift.com/container-platform/4.3/authentication/using-service-accounts-in-applications.html\"\n        }}>{`Using Service Accounts`}</a></li>\n    </ul>\n    <p><strong parentName=\"p\">{`IKS`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://kubernetes.io/docs/reference/access-authn-authz/service-accounts-admin/\"\n        }}>{`Service Accounts`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\"\n        }}>{`Service Account Configuration`}</a></li>\n    </ul>\n    <h2>{`References`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: my-service-account\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  serviceAccountName: my-service-account\n  containers:\n  - name: my-app\n    image: bitnami/nginx\n    ports:\n      - containerPort: 8080\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: v1\nkind: Secret\nmetadata:\n  name: build-robot-secret\n  annotations:\n    kubernetes.io/service-account.name: my-service-account\ntype: kubernetes.io/service-account-token\n`}</code></pre>\n    <Tabs mdxType=\"Tabs\">\n      <Tab label=\"OpenShift\" mdxType=\"Tab\">\n        <p><strong parentName=\"p\">{` Creating a ServiceAccount`}</strong></p>\n        <pre><code parentName=\"pre\" {...{}}>{`oc create sa <service_account_name>\n`}</code></pre>\n        <p><strong parentName=\"p\">{` View ServiceAccount Details `}</strong></p>\n        <pre><code parentName=\"pre\" {...{}}>{`oc describe sa <service_account_name>\n`}</code></pre>\n      </Tab>\n      <Tab label=\"IKS\" mdxType=\"Tab\">\n        <p><strong parentName=\"p\">{` Create a ServiceAccount `}</strong></p>\n        <pre><code parentName=\"pre\" {...{}}>{`kubectl create sa <service_account_name>\n`}</code></pre>\n        <p><strong parentName=\"p\">{` View ServiceAccount Details `}</strong></p>\n        <pre><code parentName=\"pre\" {...{}}>{`kubectl describe sa <service_account_name>\n`}</code></pre>\n      </Tab>\n    </Tabs>\n    <h2>{`Activities`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Task`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Link`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><strong parentName=\"td\"><em parentName=\"strong\">{` Try It Yourself `}</em></strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Pod Creation`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Challenge yourself to create a Pod YAML file to meet certain parameters.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../activities/labs/lab1\"\n            }}>{`Pod Creation`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Pod Configuration`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Configure a pod to meet compute resource requirements.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"../activities/labs/lab2\"\n            }}>{`Pod Configuration`}</a></td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}